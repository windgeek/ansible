! Configuration File for keepalived
global_defs {
   notification_email {
        root@localhost          	#收件人的email地址（当keepalived出故障的时候发送给哪些用户，可以指定多个）
   }
        notification_email_from keepalived@localhost            #发件人email地址
        smtp_server 127.0.0.1           #指定smtp服务器
        smtp_connect_timeout 30         #指定链接smtp服务器超时时间间隔
        }
}
#VIP,启动多个VIP
vrrp_instance VI_1 {
        state BACKUP            #为了用不抢占的配置而设置的（两个节点都是BACKUP）
        interface {{e}}           #虚拟ip所要绑定的网卡（真实服务的网卡）
        virtual_router_id 51    #指定VRRP实例ID，范围是0-255 （同一个keepalibved集群中各节点配置相同）
        priority 90             #要比备用节点大，且各节点不相同
        advert_int 1            #指定发送VRRP通告的间隔。单位是秒。默认1秒 两个节点设置必须一样
        #允许低优先级的机器继续成为MASTER，即使高优先级的机器已经上线。如果要使用这个功能，则初始化状态必须为BACKUP。
        nopreempt
    authentication {
        auth_type PASS          #指定认证方式。PASS简单密码认证(推荐),AH:IPSEC认证(不推荐)。
        auth_pass k19k19        #指定认证所使用的密码。最多8位。（不是服务器密码）
    }
    virtual_ipaddress {
        #<IPADDR>/<MASK> brd <IPADDR> dev <STRING> scope <SCOPE> label <LABEL>
        #虚拟的ip要和被代理的ip在同一个网段，且该ip没有被占用
        {{vip}}/24 dev {{e}} label {{e}}:0
    }
}
virtual_server {{vip}} 3000 {
     delay_loop 2
     lb_algo wrr
     lb_kind DR
     persistence_timeout 60
     protocol TCP
     real_server {{server_ip1}} 3000 {
         weight 3
         notify_down /etc/keepalived/grafana_server.sh  # 当mysql服务down了之后，执行的脚本
         TCP_CHECK {
             connect_timeout 10   # mysql连接超时时长（秒）
             nb_get_retry 3       # mysql服务连接失败，重试次数
             delay_before_retry 3 #每隔3秒检测一次mysql服务是否可用
             connect_port 3000
         }
     }
}
