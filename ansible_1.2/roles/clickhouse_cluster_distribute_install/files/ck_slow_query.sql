INSERT INTO k19_ods.ck_slow_query_log_local SELECT     eventDate,     startTime,     status,     useSeconds,     readRows,     resultRows,     writeRows,     writtenMB,     memoryUsageMB,     tableName,     clusterName,     serverName,     serverIp,     initial_query_id,     query_id,     queryFromHost,     query,     exception,     stack_trace FROM (	with trimBoth(multiIf(position(upper(query), 'SYSTEM.QUERY_LOG')!=0,'SYSTEM.QUERY_LOG', (position(upper(query), 'FROM')=0 AND position(upper(query), 'INSERT')=0),'FUNCTIONS', position(upper(query), 'FROM ')!=0,substring(substring(upper(query), position(upper(query), 'FROM ')+5, 50),1, if(position(substring(upper(query), position(upper(query), 'FROM ') + 5, 50), ' ')=0,length(substring(upper(query), position(upper(query), 'FROM ') + 5, 50)), position(substring(upper(query), position(upper(query), 'FROM ') + 5, 50), ' ')) ),  position(upper(query), 'INSERT INTO TABLE ')!=0,extract(upper(query), 'INSERT INTO TABLE (.*) FORMAT.*'), extract(upper(query), 'INSERT INTO (.*) \\(.*')!='',extract(upper(query), 'INSERT INTO (.*) \\(.*'), extract(upper(query), 'INSERT INTO (.*) FORMAT.*')  )) AS tableName      SELECT         event_date AS eventDate,         query_start_time AS startTime,         multiIf(type = 1, 'start', type = 2, 'success', type = 3, 'errorBeforeStart', type = 4, 'errorProcessing', 'other') AS status,         query_duration_ms / 1000 AS useSeconds,         read_rows AS readRows,         result_rows AS resultRows,         written_rows AS writeRows,         (written_bytes / 1024) / 1024 AS writtenMB,         memory_usage / (1024 * 1024) AS memoryUsageMB,         tableName,         initial_query_id,         query_id,         query,         substring(IPv6NumToString(address), 8, 15) AS queryFromHost,         exception,         stack_trace,         '1' AS joinkey     FROM system.query_log     WHERE (type IN (2, 4))AND initial_query_id!='' AND ((position(tableName, 'DM') != 0) OR (position(tableName, 'NTC') != 0)OR (position(tableName, 'DREAM') != 0)) AND (position(tableName, ' ') = 0) AND (today() = event_date) AND (dateDiff('second', event_time, now()) <= 360) ) AS a INNER JOIN (    SELECT         cluster AS clusterName,         host_name AS serverName,         host_address AS serverIp,         '1' AS joinkey     FROM system.clusters     WHERE is_local     LIMIT 1 ) AS b ON a.joinkey = b.joinkey ;